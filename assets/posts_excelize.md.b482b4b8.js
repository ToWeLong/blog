import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.119b145c.js";const C=JSON.parse('{"title":"讲一讲Golang中excelize的几种用法","description":"excelize在最近工作中用到的比较多，也是记录一下常见的几种用法以及使用场景，也方便以后用的频率少的时候来此查阅。","frontmatter":{"date":"2024-02-18T00:00:00.000Z","title":"讲一讲Golang中excelize的几种用法","tags":["golang"],"description":"excelize在最近工作中用到的比较多，也是记录一下常见的几种用法以及使用场景，也方便以后用的频率少的时候来此查阅。"},"headers":[],"relativePath":"posts/excelize.md","filePath":"posts/excelize.md"}'),p={name:"posts/excelize.md"},o=l(`<h1 id="讲一讲golang中excelize的几种用法" tabindex="-1">讲一讲Golang中excelize的几种用法 <a class="header-anchor" href="#讲一讲golang中excelize的几种用法" aria-label="Permalink to &quot;讲一讲Golang中excelize的几种用法&quot;">​</a></h1><p><code>excelize</code><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>是 golang 中一个操作<code>excel</code>的库，有点类似于Java生态中阿里巴巴开源的<code>EasyExcel</code><sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>。</p><h2 id="导出" tabindex="-1">导出 <a class="header-anchor" href="#导出" aria-label="Permalink to &quot;导出&quot;">​</a></h2><h3 id="_1-直接生成excel文件" tabindex="-1">1. 直接生成excel文件 <a class="header-anchor" href="#_1-直接生成excel文件" aria-label="Permalink to &quot;1. 直接生成excel文件&quot;">​</a></h3><blockquote><p>应用场景：常用于脚本读取 DB（database）中的数据导出成 excel 文件。</p></blockquote><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Create a new sheet.</span></span>
<span class="line"><span style="color:#E1E4E8;">	f </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> excelize.</span><span style="color:#79B8FF;">NewFile</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// MOCK的数据</span></span>
<span class="line"><span style="color:#E1E4E8;">	list </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> []PendingData{</span></span>
<span class="line"><span style="color:#E1E4E8;">		{Brand: </span><span style="color:#9ECBFF;">&quot;abc.com&quot;</span><span style="color:#E1E4E8;">, TLD: </span><span style="color:#9ECBFF;">&quot;100/100&quot;</span><span style="color:#E1E4E8;">, Include: </span><span style="color:#9ECBFF;">&quot;100/100&quot;</span><span style="color:#E1E4E8;">, Typo: </span><span style="color:#9ECBFF;">&quot;100/100&quot;</span><span style="color:#E1E4E8;">, Added: </span><span style="color:#9ECBFF;">&quot;2024-02-17&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">		{Brand: </span><span style="color:#9ECBFF;">&quot;abcasdf.com&quot;</span><span style="color:#E1E4E8;">, TLD: </span><span style="color:#9ECBFF;">&quot;100/100&quot;</span><span style="color:#E1E4E8;">, Include: </span><span style="color:#9ECBFF;">&quot;100/100&quot;</span><span style="color:#E1E4E8;">, Typo: </span><span style="color:#9ECBFF;">&quot;100/100&quot;</span><span style="color:#E1E4E8;">, Added: </span><span style="color:#9ECBFF;">&quot;2024-02-17&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	excelList </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">make</span><span style="color:#E1E4E8;">([][]</span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;">{}, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 设置表头</span></span>
<span class="line"><span style="color:#E1E4E8;">	excelList </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">append</span><span style="color:#E1E4E8;">(excelList, []</span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;">{}{</span><span style="color:#9ECBFF;">&quot;Brand&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;TLD&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Include&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Typo&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Added&quot;</span><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> _, data </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">range</span><span style="color:#E1E4E8;"> list {</span></span>
<span class="line"><span style="color:#E1E4E8;">		excelList </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">append</span><span style="color:#E1E4E8;">(excelList, []</span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;">{}{data.Brand, data.TLD, data.Include, data.Typo, data.Added})</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> idx, row </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">range</span><span style="color:#E1E4E8;"> excelList {</span></span>
<span class="line"><span style="color:#E1E4E8;">		cell, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> excelize.</span><span style="color:#79B8FF;">CoordinatesToCellName</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, idx</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(err)</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">		f.</span><span style="color:#79B8FF;">SetSheetRow</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Sheet1&quot;</span><span style="color:#E1E4E8;">, cell, </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">row)</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> f.</span><span style="color:#79B8FF;">SaveAs</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test.xlsx&quot;</span><span style="color:#E1E4E8;">); err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Create a new sheet.</span></span>
<span class="line"><span style="color:#24292E;">	f </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> excelize.</span><span style="color:#005CC5;">NewFile</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// MOCK的数据</span></span>
<span class="line"><span style="color:#24292E;">	list </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> []PendingData{</span></span>
<span class="line"><span style="color:#24292E;">		{Brand: </span><span style="color:#032F62;">&quot;abc.com&quot;</span><span style="color:#24292E;">, TLD: </span><span style="color:#032F62;">&quot;100/100&quot;</span><span style="color:#24292E;">, Include: </span><span style="color:#032F62;">&quot;100/100&quot;</span><span style="color:#24292E;">, Typo: </span><span style="color:#032F62;">&quot;100/100&quot;</span><span style="color:#24292E;">, Added: </span><span style="color:#032F62;">&quot;2024-02-17&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">		{Brand: </span><span style="color:#032F62;">&quot;abcasdf.com&quot;</span><span style="color:#24292E;">, TLD: </span><span style="color:#032F62;">&quot;100/100&quot;</span><span style="color:#24292E;">, Include: </span><span style="color:#032F62;">&quot;100/100&quot;</span><span style="color:#24292E;">, Typo: </span><span style="color:#032F62;">&quot;100/100&quot;</span><span style="color:#24292E;">, Added: </span><span style="color:#032F62;">&quot;2024-02-17&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	excelList </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">make</span><span style="color:#24292E;">([][]</span><span style="color:#D73A49;">interface</span><span style="color:#24292E;">{}, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 设置表头</span></span>
<span class="line"><span style="color:#24292E;">	excelList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">append</span><span style="color:#24292E;">(excelList, []</span><span style="color:#D73A49;">interface</span><span style="color:#24292E;">{}{</span><span style="color:#032F62;">&quot;Brand&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;TLD&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Include&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Typo&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Added&quot;</span><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> _, data </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">range</span><span style="color:#24292E;"> list {</span></span>
<span class="line"><span style="color:#24292E;">		excelList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">append</span><span style="color:#24292E;">(excelList, []</span><span style="color:#D73A49;">interface</span><span style="color:#24292E;">{}{data.Brand, data.TLD, data.Include, data.Typo, data.Added})</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> idx, row </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">range</span><span style="color:#24292E;"> excelList {</span></span>
<span class="line"><span style="color:#24292E;">		cell, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> excelize.</span><span style="color:#005CC5;">CoordinatesToCellName</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, idx</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(err)</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		f.</span><span style="color:#005CC5;">SetSheetRow</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Sheet1&quot;</span><span style="color:#24292E;">, cell, </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">row)</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> f.</span><span style="color:#005CC5;">SaveAs</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test.xlsx&quot;</span><span style="color:#24292E;">); err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_2-文件流导出" tabindex="-1">2. 文件流导出 <a class="header-anchor" href="#_2-文件流导出" aria-label="Permalink to &quot;2. 文件流导出&quot;">​</a></h3><blockquote><p>应用场景：常用于 HTTP API 接口读取 DB（database）中的数据导出成 excel 文件。</p></blockquote><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	http.</span><span style="color:#79B8FF;">HandleFunc</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/download&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">func</span><span style="color:#E1E4E8;">(w http.ResponseWriter, r </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">http.Request) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// 创建一个新的Excel文件</span></span>
<span class="line"><span style="color:#E1E4E8;">		f </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> excelize.</span><span style="color:#79B8FF;">NewFile</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// 创建一个新的表</span></span>
<span class="line"><span style="color:#E1E4E8;">		sheet </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> f.</span><span style="color:#79B8FF;">NewSheet</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Sheet1&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// 设置活动的Sheet</span></span>
<span class="line"><span style="color:#E1E4E8;">		f.</span><span style="color:#79B8FF;">SetActiveSheet</span><span style="color:#E1E4E8;">(sheet)</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// 设置单元格的值</span></span>
<span class="line"><span style="color:#E1E4E8;">		f.</span><span style="color:#79B8FF;">SetCellValue</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Sheet1&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;A1&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Hello&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">		f.</span><span style="color:#79B8FF;">SetCellValue</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Sheet1&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;B1&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;World&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// 设置响应的header信息，这样浏览器会将响应作为一个文件下载</span></span>
<span class="line"><span style="color:#E1E4E8;">		w.</span><span style="color:#79B8FF;">Header</span><span style="color:#E1E4E8;">().</span><span style="color:#79B8FF;">Add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Content-Type&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;application/octet-stream&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">		w.</span><span style="color:#79B8FF;">Header</span><span style="color:#E1E4E8;">().</span><span style="color:#79B8FF;">Add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Content-Disposition&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;attachment; filename=HelloWorld.xlsx&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// 将文件写入响应</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> f.</span><span style="color:#79B8FF;">Write</span><span style="color:#E1E4E8;">(w); err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			http.</span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(w, err.</span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">(), http.StatusInternalServerError)</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">	})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	http.</span><span style="color:#79B8FF;">ListenAndServe</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;:8000&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	http.</span><span style="color:#005CC5;">HandleFunc</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/download&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">func</span><span style="color:#24292E;">(w http.ResponseWriter, r </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">http.Request) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 创建一个新的Excel文件</span></span>
<span class="line"><span style="color:#24292E;">		f </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> excelize.</span><span style="color:#005CC5;">NewFile</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 创建一个新的表</span></span>
<span class="line"><span style="color:#24292E;">		sheet </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> f.</span><span style="color:#005CC5;">NewSheet</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Sheet1&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 设置活动的Sheet</span></span>
<span class="line"><span style="color:#24292E;">		f.</span><span style="color:#005CC5;">SetActiveSheet</span><span style="color:#24292E;">(sheet)</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 设置单元格的值</span></span>
<span class="line"><span style="color:#24292E;">		f.</span><span style="color:#005CC5;">SetCellValue</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Sheet1&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;A1&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Hello&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">		f.</span><span style="color:#005CC5;">SetCellValue</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Sheet1&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;B1&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;World&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 设置响应的header信息，这样浏览器会将响应作为一个文件下载</span></span>
<span class="line"><span style="color:#24292E;">		w.</span><span style="color:#005CC5;">Header</span><span style="color:#24292E;">().</span><span style="color:#005CC5;">Add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Content-Type&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;application/octet-stream&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">		w.</span><span style="color:#005CC5;">Header</span><span style="color:#24292E;">().</span><span style="color:#005CC5;">Add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Content-Disposition&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;attachment; filename=HelloWorld.xlsx&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 将文件写入响应</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> f.</span><span style="color:#005CC5;">Write</span><span style="color:#24292E;">(w); err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			http.</span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(w, err.</span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">(), http.StatusInternalServerError)</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	http.</span><span style="color:#005CC5;">ListenAndServe</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;:8000&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_3-文件转base64导出" tabindex="-1">3. 文件转Base64导出 <a class="header-anchor" href="#_3-文件转base64导出" aria-label="Permalink to &quot;3. 文件转Base64导出&quot;">​</a></h3><blockquote><p>应用场景：常用于 HTTP API 接口读取 DB（database）中的数据导出成 excel 文件。</p></blockquote><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 创建一个新的Excel文件</span></span>
<span class="line"><span style="color:#E1E4E8;">	f </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> excelize.</span><span style="color:#79B8FF;">NewFile</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 创建一个新的表</span></span>
<span class="line"><span style="color:#E1E4E8;">	sheet </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> f.</span><span style="color:#79B8FF;">NewSheet</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Sheet1&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 设置活动的Sheet</span></span>
<span class="line"><span style="color:#E1E4E8;">	f.</span><span style="color:#79B8FF;">SetActiveSheet</span><span style="color:#E1E4E8;">(sheet)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 设置单元格的值</span></span>
<span class="line"><span style="color:#E1E4E8;">	f.</span><span style="color:#79B8FF;">SetCellValue</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Sheet1&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;A1&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Hello&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	f.</span><span style="color:#79B8FF;">SetCellValue</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Sheet1&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;B1&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;World&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 创建一个bytes.Buffer，并将Excel文件写入其中</span></span>
<span class="line"><span style="color:#E1E4E8;">	buf </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">new</span><span style="color:#E1E4E8;">(bytes.Buffer)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> f.</span><span style="color:#79B8FF;">Write</span><span style="color:#E1E4E8;">(buf); err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Error writing file to buffer:&quot;</span><span style="color:#E1E4E8;">, err)</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 将Excel文件转换为Base64编码</span></span>
<span class="line"><span style="color:#E1E4E8;">	base64Str </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> base64.StdEncoding.</span><span style="color:#79B8FF;">EncodeToString</span><span style="color:#E1E4E8;">(buf.</span><span style="color:#79B8FF;">Bytes</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(base64Str)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 创建一个新的Excel文件</span></span>
<span class="line"><span style="color:#24292E;">	f </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> excelize.</span><span style="color:#005CC5;">NewFile</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 创建一个新的表</span></span>
<span class="line"><span style="color:#24292E;">	sheet </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> f.</span><span style="color:#005CC5;">NewSheet</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Sheet1&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 设置活动的Sheet</span></span>
<span class="line"><span style="color:#24292E;">	f.</span><span style="color:#005CC5;">SetActiveSheet</span><span style="color:#24292E;">(sheet)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 设置单元格的值</span></span>
<span class="line"><span style="color:#24292E;">	f.</span><span style="color:#005CC5;">SetCellValue</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Sheet1&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;A1&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Hello&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	f.</span><span style="color:#005CC5;">SetCellValue</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Sheet1&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;B1&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;World&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 创建一个bytes.Buffer，并将Excel文件写入其中</span></span>
<span class="line"><span style="color:#24292E;">	buf </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">new</span><span style="color:#24292E;">(bytes.Buffer)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> f.</span><span style="color:#005CC5;">Write</span><span style="color:#24292E;">(buf); err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Error writing file to buffer:&quot;</span><span style="color:#24292E;">, err)</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 将Excel文件转换为Base64编码</span></span>
<span class="line"><span style="color:#24292E;">	base64Str </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> base64.StdEncoding.</span><span style="color:#005CC5;">EncodeToString</span><span style="color:#24292E;">(buf.</span><span style="color:#005CC5;">Bytes</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(base64Str)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="导入" tabindex="-1">导入 <a class="header-anchor" href="#导入" aria-label="Permalink to &quot;导入&quot;">​</a></h2><h3 id="_1-直接读取本地文件" tabindex="-1">1. 直接读取本地文件 <a class="header-anchor" href="#_1-直接读取本地文件" aria-label="Permalink to &quot;1. 直接读取本地文件&quot;">​</a></h3><blockquote><p>应用场景：常用于脚本读取本地文件导入数据到 DB（database） 中。</p></blockquote><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    f, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> excelize.</span><span style="color:#79B8FF;">OpenFile</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test.xlsx&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">panic</span><span style="color:#E1E4E8;">(err)</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	rows, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> f.</span><span style="color:#79B8FF;">GetRows</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Sheet1&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(err)</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> _, row </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">range</span><span style="color:#E1E4E8;"> rows {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> _, colCell </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">range</span><span style="color:#E1E4E8;"> row {</span></span>
<span class="line"><span style="color:#E1E4E8;">			fmt.</span><span style="color:#79B8FF;">Print</span><span style="color:#E1E4E8;">(colCell, </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">		fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    f, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> excelize.</span><span style="color:#005CC5;">OpenFile</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test.xlsx&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">panic</span><span style="color:#24292E;">(err)</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	rows, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> f.</span><span style="color:#005CC5;">GetRows</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Sheet1&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(err)</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> _, row </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">range</span><span style="color:#24292E;"> rows {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> _, colCell </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">range</span><span style="color:#24292E;"> row {</span></span>
<span class="line"><span style="color:#24292E;">			fmt.</span><span style="color:#005CC5;">Print</span><span style="color:#24292E;">(colCell, </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_2-从io数据流中读取" tabindex="-1">2. 从io数据流中读取 <a class="header-anchor" href="#_2-从io数据流中读取" aria-label="Permalink to &quot;2. 从io数据流中读取&quot;">​</a></h3><blockquote><p>应用场景：从 HTTP form-data 请求中读取 excel 文件。</p></blockquote><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">fmt</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">net/http</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">github.com/xuri/excelize/v2</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">process</span><span style="color:#E1E4E8;">(w http.ResponseWriter, req </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">http.Request) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    file, _, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> req.</span><span style="color:#79B8FF;">FormFile</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;file&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        fmt.</span><span style="color:#79B8FF;">Fprintf</span><span style="color:#E1E4E8;">(w, err.</span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">defer</span><span style="color:#E1E4E8;"> file.</span><span style="color:#79B8FF;">Close</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    f, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> excelize.</span><span style="color:#79B8FF;">OpenReader</span><span style="color:#E1E4E8;">(file)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        fmt.</span><span style="color:#79B8FF;">Fprintf</span><span style="color:#E1E4E8;">(w, err.</span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    f.</span><span style="color:#79B8FF;">NewSheet</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;NewSheet&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    w.</span><span style="color:#79B8FF;">Header</span><span style="color:#E1E4E8;">().</span><span style="color:#79B8FF;">Set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Content-Disposition&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;attachment; filename=Book1.xlsx&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    w.</span><span style="color:#79B8FF;">Header</span><span style="color:#E1E4E8;">().</span><span style="color:#79B8FF;">Set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Content-Type&quot;</span><span style="color:#E1E4E8;">, req.Header.</span><span style="color:#79B8FF;">Get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Content-Type&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> _, err </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> f.</span><span style="color:#79B8FF;">WriteTo</span><span style="color:#E1E4E8;">(w); err </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        fmt.</span><span style="color:#79B8FF;">Fprintf</span><span style="color:#E1E4E8;">(w, err.</span><span style="color:#79B8FF;">Error</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    http.</span><span style="color:#79B8FF;">HandleFunc</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/process&quot;</span><span style="color:#E1E4E8;">, process)</span></span>
<span class="line"><span style="color:#E1E4E8;">    http.</span><span style="color:#79B8FF;">ListenAndServe</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;:8090&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">net/http</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">github.com/xuri/excelize/v2</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(w http.ResponseWriter, req </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">http.Request) {</span></span>
<span class="line"><span style="color:#24292E;">    file, _, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> req.</span><span style="color:#005CC5;">FormFile</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;file&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        fmt.</span><span style="color:#005CC5;">Fprintf</span><span style="color:#24292E;">(w, err.</span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">defer</span><span style="color:#24292E;"> file.</span><span style="color:#005CC5;">Close</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    f, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> excelize.</span><span style="color:#005CC5;">OpenReader</span><span style="color:#24292E;">(file)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        fmt.</span><span style="color:#005CC5;">Fprintf</span><span style="color:#24292E;">(w, err.</span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    f.</span><span style="color:#005CC5;">NewSheet</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;NewSheet&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    w.</span><span style="color:#005CC5;">Header</span><span style="color:#24292E;">().</span><span style="color:#005CC5;">Set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Content-Disposition&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;attachment; filename=Book1.xlsx&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    w.</span><span style="color:#005CC5;">Header</span><span style="color:#24292E;">().</span><span style="color:#005CC5;">Set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Content-Type&quot;</span><span style="color:#24292E;">, req.Header.</span><span style="color:#005CC5;">Get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Content-Type&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> _, err </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> f.</span><span style="color:#005CC5;">WriteTo</span><span style="color:#24292E;">(w); err </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        fmt.</span><span style="color:#005CC5;">Fprintf</span><span style="color:#24292E;">(w, err.</span><span style="color:#005CC5;">Error</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    http.</span><span style="color:#005CC5;">HandleFunc</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/process&quot;</span><span style="color:#24292E;">, process)</span></span>
<span class="line"><span style="color:#24292E;">    http.</span><span style="color:#005CC5;">ListenAndServe</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;:8090&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h1 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h1><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>excelize: <a href="https://github.com/qax-os/excelize" target="_blank" rel="noreferrer">https://github.com/qax-os/excelize</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>easyexcel: <a href="https://github.com/alibaba/easyexcel" target="_blank" rel="noreferrer">https://github.com/alibaba/easyexcel</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>`,22),e=[o];function t(c,r,E,y,i,F){return n(),a("div",null,e)}const q=s(p,[["render",t]]);export{C as __pageData,q as default};
