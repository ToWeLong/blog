import{_ as s,o as n,c as a,Q as o}from"./chunks/framework.5e03ddb0.js";const p="/blog/Xnip2023-12-10_19-50-20.png",l="/blog/Xnip2023-12-10_19-52-13.png",q=JSON.parse('{"title":"Chrome Extension 入门","description":"Chrome Extension 入门，通过介绍插件的组成以及插件之间的通信方式来快速的编写一个属于自己的插件。","frontmatter":{"date":"2023-12-10T00:00:00.000Z","title":"Chrome Extension 入门","tags":["Chrome Extension"],"description":"Chrome Extension 入门，通过介绍插件的组成以及插件之间的通信方式来快速的编写一个属于自己的插件。"},"headers":[],"relativePath":"posts/chrome-extension-learn.md","filePath":"posts/chrome-extension-learn.md"}'),e={name:"posts/chrome-extension-learn.md"},t=o('<h1 id="chrome插件开发入门" tabindex="-1">Chrome插件开发入门 <a class="header-anchor" href="#chrome插件开发入门" aria-label="Permalink to &quot;Chrome插件开发入门&quot;">​</a></h1><p>一个 <code>Chrome Extension</code><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>包含如下内容</p><p><img src="'+p+`" alt="An image"></p><h2 id="manifest-json" tabindex="-1">manifest.json <a class="header-anchor" href="#manifest-json" aria-label="Permalink to &quot;manifest.json&quot;">​</a></h2><p>这个文件是插件的配置文件（官方称之为清单文件），里面包含了插件的名称、版本、所用到的权限等等</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;name&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Getting Started Example&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;description&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Build an Extension!&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;version&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1.0&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;manifest_version&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;permissions&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;scripting&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;activeTab&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;contextMenus&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;host_permissions&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;&lt;all_urls&gt;&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;background&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;service_worker&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;background.js&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;action&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;default_popup&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;popup.html&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;default_icon&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;/images/hello.png&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;content_scripts&quot;</span><span style="color:#E1E4E8;">: [{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;js&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;content.js&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;matches&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;https://juejin.cn/*&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    }]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Getting Started Example&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;description&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Build an Extension!&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;version&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1.0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;manifest_version&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;permissions&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;scripting&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;activeTab&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;contextMenus&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;host_permissions&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;&lt;all_urls&gt;&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;background&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;service_worker&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;background.js&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;action&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;default_popup&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;popup.html&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;default_icon&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;/images/hello.png&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;content_scripts&quot;</span><span style="color:#24292E;">: [{</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;js&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;content.js&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;matches&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;https://juejin.cn/*&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    }]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="backgoround-js" tabindex="-1">backgoround.js <a class="header-anchor" href="#backgoround-js" aria-label="Permalink to &quot;backgoround.js&quot;">​</a></h2><p><code>background</code>是背景脚本，顾名思义也就是在幕后做一些事情，通常运行作为一个扩展进程运行在后台，并且全局只运行一次。它可以与 <code>content_scripts</code> 以及 <code>action</code>进行通信，稍后会讲到。</p><h2 id="content-js" tabindex="-1">content.js <a class="header-anchor" href="#content-js" aria-label="Permalink to &quot;content.js&quot;">​</a></h2><p><code>content</code>脚本则是作用于台前，它可以改变网页的<code>dom</code>元素以及网页的<code>css</code>，并且每次打开一个网页他都会运行。</p><h2 id="popup-js" tabindex="-1">popup.js <a class="header-anchor" href="#popup-js" aria-label="Permalink to &quot;popup.js&quot;">​</a></h2><p><code>popup</code>也就是插件的弹出页，由html、css、js组成，右上角点击插件的icon就会弹出这个页面，而这个页面通常也需要绑定对应的脚本，由于插件本身不支持内联的<code>js</code>，因此脚本的<code>js</code>只能以<code>js</code>文件导入的形式进行引入。popup还有个特点，它的dom元素是与页面的dom元素是隔离的。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">src</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;./popup.js&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;./popup.js&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="通信" tabindex="-1">通信 <a class="header-anchor" href="#通信" aria-label="Permalink to &quot;通信&quot;">​</a></h2><p><img src="`+l+`" alt="An image"> 通信需要双方合作才能通信，什么意思呢，在插件中要是想通信，那么一方必须是发送而另一方必须接收，也就是说两者缺一不可。</p><ul><li><p>发送方： background 发送消息进行通信需要调用<code>chrome.runtime.sendMessage</code>这个API，传入action（动作）和payload（载荷），如下所示：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">btn.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;click&#39;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    chrome.runtime.</span><span style="color:#B392F0;">sendMessage</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">            action: </span><span style="color:#9ECBFF;">&#39;content click&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            payload: </span><span style="color:#9ECBFF;">&#39;I come from content.js&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">btn.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;click&#39;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    chrome.runtime.</span><span style="color:#6F42C1;">sendMessage</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">            action: </span><span style="color:#032F62;">&#39;content click&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            payload: </span><span style="color:#032F62;">&#39;I come from content.js&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>popup发送消息通常是发送给当前激活的tab，也就是浏览器当前所在的页面，发送消息多了一个<code>tabId</code>，因为要指定发送给哪个tab，代码示例如下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">btn2.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;click&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> [tab] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> chrome.tabs.</span><span style="color:#B392F0;">query</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    active: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    currentWindow: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#E1E4E8;">chrome.tabs.</span><span style="color:#B392F0;">sendMessage</span><span style="color:#E1E4E8;">(tab.id, {</span></span>
<span class="line"><span style="color:#E1E4E8;">    action: </span><span style="color:#9ECBFF;">&#39;click&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    payload: </span><span style="color:#9ECBFF;">&#39;i come form popop&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">btn2.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;click&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#E36209;">event</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> [tab] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> chrome.tabs.</span><span style="color:#6F42C1;">query</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    active: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    currentWindow: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">chrome.tabs.</span><span style="color:#6F42C1;">sendMessage</span><span style="color:#24292E;">(tab.id, {</span></span>
<span class="line"><span style="color:#24292E;">    action: </span><span style="color:#032F62;">&#39;click&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    payload: </span><span style="color:#032F62;">&#39;i come form popop&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div></li><li><p>接收方 有发送方，必定需要有接收方，接收方可能有多个，比如content发送消息时background和popup都能收到，那么由谁来处理呢，这时候就可以根据action来判断到底是哪一个接收方去处理，代码如下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">chrome.runtime.onMessage.</span><span style="color:#B392F0;">addListener</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">request</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">sender</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">sendResponse</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">action</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">payload</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> request</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(action, payload, </span><span style="color:#9ECBFF;">&#39;popop got!&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">sendResponse</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;popop got!&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">chrome.runtime.onMessage.</span><span style="color:#6F42C1;">addListener</span><span style="color:#24292E;">((</span><span style="color:#E36209;">request</span><span style="color:#24292E;">, </span><span style="color:#E36209;">sender</span><span style="color:#24292E;">, </span><span style="color:#E36209;">sendResponse</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">action</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">payload</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> request</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(action, payload, </span><span style="color:#032F62;">&#39;popop got!&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">sendResponse</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;popop got!&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div></li></ul><h2 id="示例代码" tabindex="-1">示例代码 <a class="header-anchor" href="#示例代码" aria-label="Permalink to &quot;示例代码&quot;">​</a></h2><ul><li>chrome-extension-learn<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></li><li>Chrome插件合集<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></li><li>基于 ChatGPT 实现一个划词翻译 Chrome 插件<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></li></ul><h1 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h1><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>Chrome Developer Document: <a href="https://developer.chrome.com/docs/extensions/develop/concepts/content-scripts?hl=zh-cn" target="_blank" rel="noreferrer">https://developer.chrome.com/docs/extensions/develop/concepts/content-scripts?hl=zh-cn</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>chrome-extension-learn: <a href="https://github.com/towelong/chrome-extension-learn" target="_blank" rel="noreferrer">https://github.com/towelong/chrome-extension-learn</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>Chrome插件合集: <a href="https://juejin.cn/column/7204445469099098167" target="_blank" rel="noreferrer">https://juejin.cn/column/7204445469099098167</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p>基于 ChatGPT 实现一个划词翻译 Chrome 插件: <a href="https://www.aneasystone.com/archives/2023/06/chrome-extension-with-chatgpt.html" target="_blank" rel="noreferrer">https://www.aneasystone.com/archives/2023/06/chrome-extension-with-chatgpt.html</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p></li></ol></section>`,21),c=[t];function r(E,y,i,u,d,h){return n(),a("div",null,c)}const m=s(e,[["render",r]]);export{q as __pageData,m as default};
